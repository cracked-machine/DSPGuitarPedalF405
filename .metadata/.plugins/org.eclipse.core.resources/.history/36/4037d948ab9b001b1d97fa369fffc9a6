/*
 * EventMachine.hpp
 *
 *  Created on: Apr 12, 2021
 *      Author: chris
 */
/*
#ifndef INC_EVENTMACHINE_OLD_HPP_
#define INC_EVENTMACHINE_OLD_HPP_



#include "stm32f4xx_hal.h"



class EventMachine
{
public:

	enum State
	{
		FX_DISABLED,
		FX_ENABLED_DEFAULT,
		FX_ENABLED_WITH_USER_SWITCH_A,
		FX_ENABLED_WITH_USER_SWITCH_B,
		FX_ENABLED_WITH_USER_SWITCH_A_AND_B
	};

	enum Event
	{
		evFOOT_SWITCH_LEFT = GPIO_PIN_13,
		evFOOT_SWITCH_RIGHT = GPIO_PIN_14,
		evUSER_SWITCH_LEFT = GPIO_PIN_1,
		evUSER_SWITCH_RIGHT = GPIO_PIN_2,
		evROTARY_ENC_LEFT,
		evROTARY_ENC_RIGHT,

		evNone = 0xFFFF
	};


	EventMachine();
	void processEvent();
	void setNewEvent(EventMachine::Event _event);
	EventMachine::State getSystemState();


private:

	EventMachine::State _nextState;
	EventMachine::Event _newEvent;



};





#endif /* INC_EVENTMACHINE_OLD_HPP_ */

*/
