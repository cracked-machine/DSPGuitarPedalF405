/*
 * EventMachine.cpp
 *
 *  Created on: Apr 12, 2021
 *      Author: chris
 */

#include "EventMachine.hpp"
#include "FxDisabledState.hpp"

#ifdef __cplusplus
	extern "C"
	{
#endif

EventMachine::EventMachine()
{

	states_list[EventMachine::FX_DISABLED] = new FxDisabledState();
	states_list[EventMachine::FX_ENABLED] = new FxEnabledState();

	state = states_list[EventMachine::FX_DISABLED];
}

EventMachine::~EventMachine()
{

	for(AbstractState* s : states_list)
		delete s;

}
void EventMachine::evFootswitchA()
{
	state->evFootswitchA(this);
}
void EventMachine::evFootswitchB()
{
	state->evFootswitchB(this);
}

void EventMachine::evUserSwitchA()
{
	state->evUserSwitchA(this);
}
void EventMachine::evUserSwitchB()
{
	state->evUserSwitchB(this);
}
void EventMachine::evRotaryEncoderA()
{
	state->evRotaryEncoderA(this);
}
void EventMachine::evRotaryEncoderB()
{
	state->evRotaryEncoderB(this);
}


AbstractState * EventMachine::getState()
{
	return state;
}

#ifdef __cplusplus
	}
#endif
