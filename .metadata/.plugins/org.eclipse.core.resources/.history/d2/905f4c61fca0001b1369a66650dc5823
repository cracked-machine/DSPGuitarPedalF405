/*
 * Debounce.cpp
 *
 *  Created on: Apr 14, 2021
 *      Author: chris
 */

#include "Debounce.hpp"
#include <iostream>


DebounceManager::DebounceManager(TIM_TypeDef*  _tim, size_t _delay)
{
	// input conditioning checks


	if(_delay < 0 || _delay > 65535)
		_delay = 65535;

	// init members
	theTimer = _tim;
	delay = _delay;
	last_interrupt_time = 0;
	interrupt_time = 0;

	// set the timer counter to max resolution
	theTimer->PSC = 65535;
	theTimer->ARR = 65535;
}


void DebounceManager::start()
{
	theTimer->CR1 |= TIM_CR1_CEN_Msk;
}


bool DebounceManager::check_debounce()
{
	bool res = false;

	interrupt_time = theTimer->CNT;
	//std::cout << "CNT:" << interrupt_time << " - lastCNT:" << last_interrupt_time << " - diff:" << (interrupt_time - last_interrupt_time) << std::endl;
	if ((interrupt_time - last_interrupt_time) > delay)
	{
		res = true;
	}

	last_interrupt_time = interrupt_time;
	return res;
}

void DebounceManager::error_handle()
{
	do
	{
		// wait here
	} while(FOREVER());

}

