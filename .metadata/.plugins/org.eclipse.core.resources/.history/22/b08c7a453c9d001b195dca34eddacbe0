/*
 * AppMain.cpp
 *
 *  Created on: Apr 11, 2021
 *      Author: chris
 */

#include <app_main.hpp>

#include <pedal_io_test.hpp>


#include <FreeRTOS_UserTasks.hpp>


#include "stm32f4xx_hal.h"
#include "stm32f4xx_hal_tim.h"
#include "tim.h"


#include <iostream>


#ifdef __cplusplus
	extern "C"
	{
#endif


	void appmain()
	{
		std::cout << "hello\n";

		//HAL_NVIC_SetPriorityGrouping( NVIC_PRIORITYGROUP_4 );

		// EXTI init
		 HAL_NVIC_SetPriority(EXTI0_IRQn, 5, 0);
		 HAL_NVIC_EnableIRQ(EXTI0_IRQn);
		 HAL_NVIC_SetPriority(EXTI1_IRQn, 5, 0);
		 HAL_NVIC_EnableIRQ(EXTI1_IRQn);
		 HAL_NVIC_SetPriority(EXTI2_IRQn, 5, 0);
		 HAL_NVIC_EnableIRQ(EXTI2_IRQn);
		 HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
		 HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);


		// enable the rotary encoders
		HAL_TIM_Encoder_Start_IT(&htim3, TIM_CHANNEL_ALL);
		HAL_TIM_Encoder_Start_IT(&htim4, TIM_CHANNEL_ALL);

		run_sys_checks();

		initEventMachine();
		initRTOS();


		while(1)
		{

		}
	}

	void EXTI0_IRQHandler(void)
	{
		//extiResumeTask();
		// clear the EXTI pending bit
		EXTI->PR &= ~((EXTI_PR_PR0_Pos));
	}

	void EXTI1_IRQHandler(void)
	{
		//extiResumeTask();
		// clear the EXTI pending bit
		EXTI->PR &= ~((EXTI_PR_PR1_Pos));
	}

	void EXTI2_IRQHandler(void)
	{
		//extiResumeTask();
		// clear the EXTI pending bit
		EXTI->PR &= ~((EXTI_PR_PR2_Pos));
	}

	void EXTI15_10_IRQHandler(void)
	{
		uint16_t tmp;
		if((EXTI->PR & EXTI_PR_PR13_Msk) == EXTI_PR_PR13_Msk)
		{
			tmp = FootSwitchA_IN_Pin;
			extiResumeTask(&tmp);
		}
		if((EXTI->PR & EXTI_PR_PR14_Msk) == EXTI_PR_PR14_Msk)
		{
			tmp = FootSwitchB_IN_Pin;
			extiResumeTask(&tmp);
		}

		// clear the EXTI pending bit
		EXTI->PR &= ~((EXTI_PR_PR13_Pos));
		EXTI->PR &= ~((EXTI_PR_PR14_Pos));
	}


	//
	void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
	{

	}

#ifdef __cplusplus
	}
#endif

