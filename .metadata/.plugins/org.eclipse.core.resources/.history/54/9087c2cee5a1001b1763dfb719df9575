/*
 * AllPassFilter.cpp
 *
 *  Created on: Apr 20, 2021
 *      Author: chris
 */


#include <AllPassFilter.hpp>



AllPassFilter::AllPassFilter(size_t pSize, float pGain)
{
	buffer = new AllPassFilterBuffer(pSize);
	buffer->iterator = buffer->begin();
	gain = pGain;
	limit = 1.0f * pSize;
}

AllPassFilter::~AllPassFilter()
{

}

float AllPassFilter::processSample(float pSampleIn)
{
	float readback = buffer->iterator;
	readback += (-gain) * inSample;
	float new = readback*ap0_g + inSample;
	apbuf0[ap0_p] = new;
	ap0_p++;
	if (ap0_p == ap0_lim) ap0_p=0;
	return readback;
	/*
	float Xn = pSampleIn;
	float readback = *(buffer->iterator);
	float tmp = Xn + (gain * readback);
	*(buffer->iterator) = tmp;
	buffer->iterator++;
	if (*(buffer->iterator) == limit)
		buffer->iterator = buffer->begin();
	return readback;
	*/
}


