/*
 * RtosTaskManager.hpp
 *
 *  Created on: Apr 14, 2021
 *      Author: chris
 */

#ifndef FREERTOS_RTOSTASKMANAGER_HPP_
#define FREERTOS_RTOSTASKMANAGER_HPP_

// FreeRTOS
#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"

#include "EventMachine.hpp"


class RtosTaskManager
{
public:
	RtosTaskManager();

	EventMachine* getEM();
	void initEventMachine();
	void initIsrTask();

private:
	// static RTOS task
	TaskHandle_t ISRTaskHandle;
	StaticTask_t ISRTaskBuffer;
	StackType_t ISRTaskStack[ 200 ];

	// static RTOS queue for ISR-to-task comm
	static StaticQueue_t xStaticQueue;
	uint8_t ucQueueStorageArea[ 1 * sizeof( uint16_t ) ];
	QueueHandle_t xQueue;

	// create state machine instance
	EventMachine *em;
};


#endif /* FREERTOS_RTOSTASKMANAGER_HPP_ */
