/*
 * FxEnabledState.cpp
 *
 *  Created on: 13 Apr 2021
 *      Author: chris
 */

#include "FxEnabledState.hpp"

#include <iostream>



// FxEnabledState class
void FxEnabledState::evFootswitchA(AbstractStateMachine *machine)
{
	setState(machine, machine->states_list[AbstractStateMachine::FX_DISABLED]);
	#ifdef USE_HAL_DRIVER
		HAL_GPIO_WritePin(LEDA_R_GPIO_Port, LEDA_R_Pin, GPIO_PIN_RESET);
		// toggle relay for clean/FX signal path
		HAL_GPIO_TogglePin(RelayCoil_OUT_GPIO_Port, RelayCoil_OUT_Pin);
	#endif
	std::cout << "FxEnabledState::evFootswitchA" << std::endl;
}

void FxEnabledState::evFootswitchB(AbstractStateMachine *machine)
{
	setState(machine, machine->states_list[AbstractStateMachine::FX_DISABLED]);
	#ifdef USE_HAL_DRIVER
		HAL_GPIO_WritePin(LEDB_R_GPIO_Port, LEDB_B_Pin, GPIO_PIN_RESET);
	#endif
}

void FxEnabledState::evUserSwitchA(AbstractStateMachine *machine)
{

}
void FxEnabledState::evUserSwitchB(AbstractStateMachine *machine)
{

}
void FxEnabledState::evRotaryEncoderA(AbstractStateMachine *machine)
{

}
void FxEnabledState::evRotaryEncoderB(AbstractStateMachine *machine)
{

}

