/*
 * RTOSTask.hpp
 *
 *  Created on: Apr 14, 2021
 *      Author: chris
 */

#ifndef FREERTOS_RTOSTASK_HPP_
#define FREERTOS_RTOSTASK_HPP_

#include "FreeRTOS.h"
#include "task.h"

StaticTask_t xTaskBuffer;
StackType_t xStack[ STACK_SIZE ];

class Thread
{
public:
	Thread( unsigned portSHORT _stackDepth, UBaseType_t _priority, const char* _name = "" )
	{
		&this->taskHandle = xTaskCreateStatic( task, _name, _stackDepth, this, _priority,  &xStack, &xTaskBuffer);
	}

	virtual void Main() = 0;

protected:
	static void task( void* _params )
	{
		Thread* p = static_cast<Thread*>( _params );
		p->Main();
	}

	TaskHandle_t taskHandle;
};


#endif // FREERTOS_RTOSTASK_HPP_

