/*
 * ExtCtrlTaskManager.hpp
 *
 *  Created on: Apr 21, 2021
 *      Author: chris
 */

#ifndef TASKMANAGER_EXTCTRLTASKMANAGER_HPP_
#define TASKMANAGER_EXTCTRLTASKMANAGER_HPP_

#include <BaseTaskManager.hpp>

#ifdef USE_FREERTOS
	typedef BaseTaskManager<uint16_t, StateMachine> ExtCtrlTaskManager_t;
#else

	typedef BaseTaskManager<uint16_t, StateMachine> ExtCtrlTaskManager_t;

	class ExtCtrlTaskManagerNoRTOS : public ExtCtrlTaskManager_t
	{
	public:
		ExtCtrlTaskManagerNoRTOS();
		~ExtCtrlTaskManagerNoRTOS();

		void *operator new(std::size_t count) {
				//std::cout << "allocating " << count << " bytes, " << get_number_bytes<AbstractFx>() << " items\n";

				if(ResourceManager::checkSystemMem<int>(count))
					return ::operator new(count);
				else
					return nullptr;
		}

		void nonRtosTask(uint16_t pData);
	};
#endif






#endif /* TASKMANAGER_EXTCTRLTASKMANAGER_HPP_ */
