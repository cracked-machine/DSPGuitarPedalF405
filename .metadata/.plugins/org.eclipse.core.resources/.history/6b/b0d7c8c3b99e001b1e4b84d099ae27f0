/*
 * AbstractTaskManager.hpp
 *
 *  Created on: Apr 16, 2021
 *      Author: chris
 */

#ifndef FREERTOS_ABSTRACTTASKMANAGER_HPP_
#define FREERTOS_ABSTRACTTASKMANAGER_HPP_

// FreeRTOS
#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"

template<class T>
class AbstractTaskManager
{
	AbstractTaskManager();

	void initTask();
	void initQueue();

	TaskHandle_t getTask();
	QueueHandle_t getQueue();

	void queueSendFromISR_wrapper(T item);

private:
	// static RTOS task
	TaskHandle_t theTaskHandle;
	StaticTask_t theTaskBuffer;
	StackType_t theTaskStack[ 200 ];

	// static RTOS queue for ISR-to-task comm
	uint8_t theQueueStorageArea[ 1 * sizeof( T ) ];
	QueueHandle_t theQueue;
};

#endif /* FREERTOS_ABSTRACTTASKMANAGER_HPP_ */
