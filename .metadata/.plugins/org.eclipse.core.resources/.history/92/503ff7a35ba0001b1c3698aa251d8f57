/*
 * IIRFilterFx.cpp
 *
 *  Created on: Apr 18, 2021
 *      Author: chris
 */

#include "IIRFilterFx.hpp"

#include "arm_math.h"

arm_biquad_casd_df1_inst_f32 iirsettings_l, iirsettings_r;
float iir_l_state [4];
float iir_r_state [4];

//IIR low-pass, fs=48kHz, f_cut=1kHz, q=0.707
float iir_coeffs [5] = {
				0.003916123487156427f,
				0.007832246974312854f,
				0.003916123487156427f,
				1.8153396116625289f,
				-0.8310041056111546
};

#define BLOCK_SIZE_FLOAT 512


#ifndef ENABLE_IIR_BYPASS
	void IIRFilterFx::process_half_u16(	array<uint16_t, STEREO_BLOCK_SIZE_U16> *pRxBuf,
										array<uint16_t, STEREO_BLOCK_SIZE_U16> *pTxBuf)
	{
		for(size_t i = 0; i < BLOCK_SIZE_U16; i++ )
			(*pTxBuf)[i] = (*pRxBuf)[i];
	}

	void IIRFilterFx::process_full_u16(	array<uint16_t, STEREO_BLOCK_SIZE_U16> *pRxBuf,
										array<uint16_t, STEREO_BLOCK_SIZE_U16> *pTxBuf)
	{
		for(size_t i = BLOCK_SIZE_U16; i < STEREO_BLOCK_SIZE_U16; i++ )
			(*pTxBuf)[i] = (*pRxBuf)[i];
	}
#endif

