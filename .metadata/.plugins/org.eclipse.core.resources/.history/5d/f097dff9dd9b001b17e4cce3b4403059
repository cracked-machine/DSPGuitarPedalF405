/*
 * AbstractState.hpp
 *
 *  Created on: Apr 12, 2021
 *      Author: chris
 */

#pragma once
#include <EventMachine.hpp>

#include <stdint.h>

class EventMachine;



class AbstractState
{

public:

	virtual void update(EventMachine *machine, EventTypedef event) = 0;
	virtual ~AbstractState();

protected:

	typedef enum
	{
		evFootSwA,
		evFootSwB,
		evUserSwA,
		evUserSwB,
	} EventTypedef;

	void setState(EventMachine *machine, AbstractState *st);

};



class FxDisabledState : public AbstractState
{
public:
	FxDisabledState();
	virtual void update(EventMachine *machine);
};

class FxEnabledState : public AbstractState
{
public:
	virtual void update(EventMachine *machine);
};



