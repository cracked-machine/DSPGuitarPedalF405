/*
 * StaticIIRCombFilter.cpp
 *
 *  Created on: Apr 23, 2021
 *      Author: chris
 */

#include <StaticIIRCombFilter.hpp>

StaticIIRCombFilter1::StaticIIRCombFilter1()
{
	ptr = 0;
	gain = 0.805;
	limit = 1.0f * iircomb_size1;
}

StaticIIRCombFilter1::~StaticIIRCombFilter1()
{

}


void StaticIIRCombFilter1::zeroBuffer()
{
	//this->zeroBuffer();
	//buffer->iterator = buffer->begin();
}

float StaticIIRCombFilter1::processSample(float pSampleIn)
{
	float Xn = pSampleIn;

	float readback = buffer[ptr];

	float tmp = Xn + (gain * readback);

	buffer[ptr] = tmp;
	ptr++;

	if (buffer[ptr] >= limit)
		buffer[ptr] = 0;
	return readback;
}



